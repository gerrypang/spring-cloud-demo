server: 
  port: 8082                    

spring:
#  application:
#    name: order-server
#  # alibaba nacos 配置
#  cloud:
#    nacos:
#      # 注册中心配置
#      discovery:
#        # 配置Nacos地址
#        server-addr: localhost:8848
#      # 配置中心配置
#      config:
#        # Nacos地址
#        server-addr: localhost:8848
#        # 这里我们获取的yaml格式的配置
#        file-extension: yaml

  profiles:
    active: dev

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/mall?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password: 123456
    # 6.x版本的MySQL JDBC驱动类为com.mysql.cj.jdbc.Driver
    # 5.X版本的MySQL JDBC驱动类为com.mysql.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000    
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000  
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000  
      test-while-idle: true
      test-on-borrow:  false
      test-on-return: false
      ## 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter: stat, wall, log4j
      use-global-data-source-stat:   true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      #spring.datasource.useGlobalDataSourceStat=true
      # druid 监控配置
      #StatViewServlet配置，说明请参考Druid Wiki，

  redis:
    database: 0
    #    host: 10.10.7.172
    #    port: 6379
    password:
    #集群模式
    cluster:
      nodes: 192.168.177.156:6380,192.168.177.156:6381,192.168.177.156:6382,192.168.177.156:6383,192.168.177.156:6384,192.168.177.156:6385
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
    # 连接超时时间（毫秒）
    timeout: 0

      
# 线程池配置
async:
  executor:
    thread:
      # 核心线程池大小
      core-pool-size: 5
      # 最大线程数
      max-pool-size: 10
      # 队列容量
      queue-capacity: 100
      # 活跃时间
      keep-alive-seconds: 100
      # 线程名字前缀
      name-prefix: custom-thread-
      